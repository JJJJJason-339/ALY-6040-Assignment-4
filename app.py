# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EbA5LK7GxRAOeVtd6OkGXkkjY1VzBun4
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# --- Page config ---
st.set_page_config(page_title="Amazon Product Dashboard", layout="wide")

# --- Data loading ---
df = pd.read_csv('amazon_clean.csv')

# --- Data cleaning ---
df['Main_Category'] = df['category'].str.split('|').str[0]
df['Sales'] = df['rating_count'] * df['actual_price']

# Clean discount_percentage
df['discount_percentage'] = df['discount_percentage'].str.replace('%', '', regex=False)
df['discount_percentage'] = pd.to_numeric(df['discount_percentage'], errors='coerce')
df['rating'] = pd.to_numeric(df['rating'], errors='coerce')

# --- Sidebar filters ---
st.sidebar.header("Filter Options")

# Category filter
categories = df['Main_Category'].unique().tolist()
selected_category = st.sidebar.multiselect("Select Main Category:", categories, default=categories)

# Discount slider
min_discount = int(df['discount_percentage'].min())
max_discount = int(df['discount_percentage'].max())
discount_range = st.sidebar.slider("Discount Percentage Range:", min_discount, max_discount, (min_discount, max_discount))

# --- Apply filters ---
filtered_df = df[
    (df['Main_Category'].isin(selected_category)) &
    (df['discount_percentage'] >= discount_range[0]) &
    (df['discount_percentage'] <= discount_range[1])
]

# --- KPI display ---
total_sales = filtered_df['Sales'].sum()
avg_rating = filtered_df['rating'].mean()

st.title("Amazon Product Dashboard ðŸ“Š")
st.markdown("### Key Performance Indicators (KPIs)")
col1, col2 = st.columns(2)
col1.metric("Total Sales", f"${total_sales:,.2f}")
col2.metric("Average Rating", f"{avg_rating:.2f}")

# --- Visualization 1: Sales by Category (Pie Chart) ---
st.markdown("## Sales Distribution by Main Category")
category_summary = filtered_df.groupby('Main_Category').agg(
    Total_Sales=('Sales', 'sum'),
    Avg_Rating=('rating', 'mean')
).reset_index()

fig1, ax1 = plt.subplots()
ax1.pie(category_summary['Total_Sales'],
        labels=category_summary['Main_Category'],
        autopct='%1.1f%%', startangle=140)
ax1.set_title('Sales Distribution by Main Category')
st.pyplot(fig1)

# --- Visualization 2: Average Rating by Category (Bar Chart) ---
st.markdown("## Average Rating by Main Category")
fig2, ax2 = plt.subplots()
sns.barplot(x='Main_Category', y='Avg_Rating', data=category_summary, ax=ax2)
ax2.set_xlabel('Main Category')
ax2.set_ylabel('Average Rating')
ax2.set_title('Average Rating by Main Category')
plt.xticks(rotation=45)
st.pyplot(fig2)

# --- Visualization 3: Discount % vs Rating Scatter Plot + Regression ---
st.markdown("## Discount Percentage vs. Average Rating")
df_clean = filtered_df.dropna(subset=['discount_percentage', 'rating'])

fig3, ax3 = plt.subplots()
sns.scatterplot(data=df_clean, x='discount_percentage', y='rating', ax=ax3)
sns.regplot(data=df_clean, x='discount_percentage', y='rating', scatter=False, color='red', ax=ax3)
ax3.set_xlabel('Discount Percentage')
ax3.set_ylabel('Average Rating')
ax3.set_title('Discount Percentage vs. Average Rating')
st.pyplot(fig3)